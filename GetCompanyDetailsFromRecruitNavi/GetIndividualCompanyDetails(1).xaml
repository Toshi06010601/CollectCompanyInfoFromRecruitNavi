<Activity mc:Ignorable="sap sap2010" x:Class="GetIndividualCompanyDetails" this:GetIndividualCompanyDetails.in_str_ProcessInstructionFilePath="01.Config\03.ProcessInstruction.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="clr-namespace:ProcessToExtractCompanyInfo;assembly=ProcessToExtractCompanyInfo" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_dt_ListOfCompanyInfo" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_int_IndexOfCompanyList" Type="InArgument(x:Int32)" />
    <x:Property Name="in_str_ProcessInstructionFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_str_URLForRecruitNaviNext" Type="InArgument(x:String)" />
    <x:Property Name="in_brs_RikuNavi" Type="InArgument(ui:Browser)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1020,4314.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetIndividualCompanyDetails_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="40">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>ProcessToExtractCompanyInfo</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="35">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>ProcessToExtractCompanyInfo</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetIndividualCompanyDetails" sap:VirtualizedContainerService.HintSize="1030,4250" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="ElementExists" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="ExtractDataTable" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_CompanyInformation" />
      <Variable x:TypeArguments="x:String" Name="CompanyName" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="ary_Matches" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_ProcessInstruction" />
      <Variable x:TypeArguments="x:String" Name="str_NameOfProcess" />
      <Variable x:TypeArguments="x:Int32" Name="int_currentConditionIndex" />
      <Variable x:TypeArguments="x:Boolean" Name="bln_flgTargetRow" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ExcelApplicationScope Password="{x:Null}" AutoSave="False" DisplayName="Open Process Instruction workbook" sap:VirtualizedContainerService.HintSize="988,259.333333333333" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_str_ProcessInstructionFilePath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,150.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_11">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_ProcessInstruction]" DisplayName="Read Process Instruction" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Instruction">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_ProcessInstruction]" DisplayName="For Each Row in Process Instruction" sap:VirtualizedContainerService.HintSize="988,3858.66666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentInstruction" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="954,3736" sap2010:WorkflowViewState.IdRef="Sequence_14">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="NumberOfInstruction" />
              <Variable x:TypeArguments="x:Int32" Name="int_currentProcessIndex" />
              <Variable x:TypeArguments="x:String" Name="str_CompanyInfo" />
              <Variable x:TypeArguments="x:String" Name="str_targetTagName" />
              <Variable x:TypeArguments="x:String" Name="str_targetText" />
              <Variable x:TypeArguments="x:Boolean" Name="bln_targetElementExist" />
              <Variable x:TypeArguments="x:String" Name="str_outputColumnName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Initiation of variables" sap:VirtualizedContainerService.HintSize="912,68" sap2010:WorkflowViewState.IdRef="Sequence_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Initialize company info" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_18">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_CompanyInfo]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Initiate current Process Index" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[int_currentProcessIndex]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Initiate current Condition Index" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_20">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[int_currentConditionIndex]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">2</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="set flag of target row as False" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_21">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[bln_flgTargetRow]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <Sequence DisplayName="Get value" sap:VirtualizedContainerService.HintSize="912,68" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Get output column Name" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[str_outputColumnName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[CurrentInstruction("OutputColumnName").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Initiate NumberOfInstruction" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_15">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[NumberOfInstruction]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[(CurrentInstruction.itemarray.Count - 1) \ 2]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="262,52.6666666666667" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,154" sap2010:WorkflowViewState.IdRef="Sequence_21">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Initiate NumberOfInstruction" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_16">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[NumberOfInstruction]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[(dt_ProcessInstruction.Columns.Count - 1) \ 2]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
            </Sequence>
            <ui:InterruptibleDoWhile DisplayName="Loop till the end of instruction column" sap:VirtualizedContainerService.HintSize="912,3144.66666666667" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
              <ui:InterruptibleDoWhile.Body>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="875.333333333333,2976.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="str_NameOfCondition" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Get the name of process" sap:VirtualizedContainerService.HintSize="833.333333333333,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_NameOfProcess]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[CurrentInstruction(int_currentProcessIndex).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Get the name of condition" sap:VirtualizedContainerService.HintSize="833.333333333333,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_NameOfCondition]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[CurrentInstruction(int_currentConditionIndex).ToString]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[string.IsNullOrEmpty(io_dt_ListOfCompanyInfo(in_int_IndexOfCompanyList)(str_outputColumnName).toString)]" DisplayName="If there is no existing data in company list datatable" sap:VirtualizedContainerService.HintSize="833.333333333333,2479.33333333333" sap2010:WorkflowViewState.IdRef="If_14">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Switch x:TypeArguments="x:String" DisplayName="Switch by name of Process" Expression="[str_NameOfProcess]" sap:VirtualizedContainerService.HintSize="796.666666666667,2300" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence x:Key="ElementExist" sap:VirtualizedContainerService.HintSize="304,316.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Get target tag name" sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_12">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_targetTagName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[str_NameOfCondition.Split("/"c)(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Get target text" sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_13">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[str_targetText]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[str_NameOfCondition.Split("/"c)(1)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <p:TargetElementExist sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="TargetElementExist_1" in_str_targetTagName="[str_targetTagName]" in_str_targetText="[str_targetText]" out_bln_flgTargetElement="[bln_targetElementExist]" />
                        </Sequence>
                        <If x:Key="Anchor" Condition="[bln_targetElementExist]" DisplayName="If target element exists" sap:VirtualizedContainerService.HintSize="484,239.333333333333" sap2010:WorkflowViewState.IdRef="If_9">
                          <If.Then>
                            <p:Anchor sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Anchor_1" in_str_targetTagName="[str_targetTagName]" in_str_targetText="[str_targetText]" out_str_CompanyInfo="[str_CompanyInfo]" />
                          </If.Then>
                        </If>
                        <If x:Key="Matches" Condition="[not string.IsNullOrEmpty(str_CompanyInfo)]" DisplayName="If Company Info is not null" sap:VirtualizedContainerService.HintSize="484,239.333333333333" sap2010:WorkflowViewState.IdRef="If_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <p:Matches sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Matches_1" in_str_CompanyInfo="[str_CompanyInfo]" in_str_Pattern="[str_NameOfCondition]" out_str_CompanyInfo="[str_CompanyInfo]" />
                          </If.Then>
                        </If>
                        <If x:Key="ExtractWord" Condition="[not string.IsNullOrEmpty(str_CompanyInfo)]" DisplayName="If the Value is not null" sap:VirtualizedContainerService.HintSize="484,239.333333333333" sap2010:WorkflowViewState.IdRef="If_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <p:Extract_target_word DisplayName="Extract target word" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Extract_target_word_1" in_ary_endSignOfTargetInfo="[str_NameOfCondition.Split(&quot;,&quot;c)]" io_str_companyInfo="[str_CompanyInfo]" />
                          </If.Then>
                        </If>
                        <If x:Key="RefineWord" Condition="[not string.IsNullOrEmpty(str_CompanyInfo)]" DisplayName="If the Value is not null" sap:VirtualizedContainerService.HintSize="484,239.333333333333" sap2010:WorkflowViewState.IdRef="If_10">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <p:Refine_target_word sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Refine_target_word_1" in_ary_UnnecessaryLetters="[str_NameOfCondition.Split(&quot;,&quot;c)]" io_str_CompnanyInfo="[str_CompanyInfo]" />
                          </If.Then>
                        </If>
                        <Sequence x:Key="Exception" sap:VirtualizedContainerService.HintSize="756.666666666667,2000.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_29">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:UiElementExists DisplayName="Check if company page exists" Exists="[ElementExists]" sap:VirtualizedContainerService.HintSize="714.666666666667,106" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                            <ui:UiElementExists.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="44a4d73e-c21b-4e7c-b70d-023e5a261c14" InformativeScreenshot="64295dd6fc2ad01c2a3b9ab6fa110fad" Selector="&lt;html app='chrome.exe' /&gt;&lt;webctrl aaname='*企業ページ*' tag='A' /&gt;" TimeoutMS="3000">
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:UiElementExists.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:UiElementExists>
                          <If Condition="[ElementExists]" DisplayName="If company page exists" sap:VirtualizedContainerService.HintSize="714.666666666667,1762.66666666667" sap2010:WorkflowViewState.IdRef="If_17">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="678,1583.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="str_companyDetailsPage" />
                                  <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="ExtractDataTable" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:GetAttribute ContinueOnError="{x:Null}" Attribute="href" DisplayName="Get company page URL" sap:VirtualizedContainerService.HintSize="636,134" sap2010:WorkflowViewState.IdRef="GetAttribute_3">
                                  <ui:GetAttribute.Result>
                                    <OutArgument x:TypeArguments="x:String">[str_companyDetailsPage]</OutArgument>
                                  </ui:GetAttribute.Result>
                                  <ui:GetAttribute.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a5f1b7d3-efd8-4ea9-a03c-dd19825a09f6" InformativeScreenshot="9f4b9cd45979302c59a1fa2664e1f9c0" Selector="&lt;html app='chrome.exe' /&gt;&lt;webctrl tag='A' class='rn3-companyOfferCompany__link js-companyOfferCompany__link' /&gt;">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:GetAttribute.Target>
                                </ui:GetAttribute>
                                <ui:NavigateTo Browser="[in_brs_RikuNavi]" DisplayName="Navigate To company page" sap:VirtualizedContainerService.HintSize="636,58.6666666666667" sap2010:WorkflowViewState.IdRef="NavigateTo_3" Url="[in_str_URLForRecruitNaviNext + str_companyDetailsPage]" />
                                <Delay Duration="00:00:03" sap:VirtualizedContainerService.HintSize="636,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
                                <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayMS="3000" DisplayName="Click on further more info" sap:VirtualizedContainerService.HintSize="636,106" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT">
                                  <ui:Click.CursorPosition>
                                    <ui:CursorPosition Position="Center">
                                      <ui:CursorPosition.OffsetX>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetX>
                                      <ui:CursorPosition.OffsetY>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:CursorPosition.OffsetY>
                                    </ui:CursorPosition>
                                  </ui:Click.CursorPosition>
                                  <ui:Click.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="23aadc9c-4aac-43e3-8f49-3546ea762b60" InformativeScreenshot="79348d2c1eaf16d0cda149108cfd073b" Selector="&lt;html app='chrome.exe' /&gt;&lt;webctrl isleaf='1' tag='P' aaname='...さらに表示' /&gt;">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:Click.Target>
                                </ui:Click>
                                <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser '          Page'" sap:VirtualizedContainerService.HintSize="636,1010.66666666667" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="ef4d640a823efb5f76756d492263628a" Selector="&lt;html app='chrome.exe' /&gt;">
                                  <ui:BrowserScope.Body>
                                    <ActivityAction x:TypeArguments="x:Object">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="602,864.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExtractData DelayBetweenPagesMS="{x:Null}" NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[ExtractDataTable]" DisplayName="Extract Structured Data 'TABLE'" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="560,106" sap2010:WorkflowViewState.IdRef="ExtractData_1" MaxNumberOfResults="100" SimulateClick="True">
                                          <ui:ExtractData.Target>
                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b3e3138c-60e1-4231-8b84-9f12fbb3845b" InformativeScreenshot="fa93c6c61d833cef3867bf877e20a26b" Selector="&lt;webctrl tag='TABLE' class='rnn-detailTable rnn-textM' /&gt;" WaitForReady="COMPLETE">
                                              <ui:Target.TimeoutMS>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:Target.TimeoutMS>
                                            </ui:Target>
                                          </ui:ExtractData.Target>
                                        </ui:ExtractData>
                                        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[ExtractDataTable]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="560,626.666666666667" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                                          <ui:ForEachRow.Body>
                                            <ActivityAction x:TypeArguments="sd:DataRow">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                                              </ActivityAction.Argument>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,506.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If Condition="[CurrentRow(0).ToString.Equals(&quot;URL&quot;)]" sap:VirtualizedContainerService.HintSize="484,414.666666666667" sap2010:WorkflowViewState.IdRef="If_18">
                                                  <If.Then>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="304,215.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_22">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[str_CompanyInfo]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[CurrentRow(1).ToString]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ui:Break sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="Break_1" />
                                                    </Sequence>
                                                  </If.Then>
                                                </If>
                                              </Sequence>
                                            </ActivityAction>
                                          </ui:ForEachRow.Body>
                                        </ui:ForEachRow>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:BrowserScope.Body>
                                </ui:BrowserScope>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </Switch>
                    </If.Then>
                  </If>
                  <Assign DisplayName="Increment index of Process" sap:VirtualizedContainerService.HintSize="833.333333333333,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[int_currentProcessIndex]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[int_currentProcessIndex + 2]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Increment index of Condition" sap:VirtualizedContainerService.HintSize="833.333333333333,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[int_currentConditionIndex]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[int_currentConditionIndex + 2]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </ui:InterruptibleDoWhile.Body>
              <ui:InterruptibleDoWhile.Condition>
                <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="int_currentProcessIndex &lt;= NumberOfInstruction * 2 and not string.IsNullOrEmpty(str_NameOfProcess)" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_3" />
              </ui:InterruptibleDoWhile.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InterruptibleDoWhile>
            <If Condition="[not string.IsNullOrEmpty(str_CompanyInfo)]" DisplayName="If CompanyInfo is not null" sap:VirtualizedContainerService.HintSize="912,243.333333333333" sap2010:WorkflowViewState.IdRef="If_7">
              <If.Then>
                <Assign DisplayName="Assign CompanyInfo into datatable" sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_5">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Object">[io_dt_ListOfCompanyInfo(in_int_IndexOfCompanyList)(str_outputColumnName)]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Object">[str_CompanyInfo.Replace(Chr(13), "").Replace(Chr(10), "").Replace(" ","")]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
  </Sequence>
</Activity>